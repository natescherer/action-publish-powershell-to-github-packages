name: Publish PowerShell
description: |
  Publish a PowerShell module or script to GitHub Packages, the PowerShell Gallery, or a NuGet repository via PowerShellGet 3.
branding:
  icon: book
  color: blue
inputs:
  token:
    description: |
      Token to authenticate.
    required: true
  target:
    description: |
      Set to `packages` for GitHub Packages, `gallery` for the PowerShell Gallery, or `nuget` for a NuGet repository.
    required: true
  path:
    description: |
      Path to publish relative to the root of the project. Can either be a .psd1 file, a .ps1 file, or a directory. If a directory, the action will search for a .psd1 file in the root. If none are found, it will then 
      search for a .ps1 file in the root.
    required: true
  nugetUrl:
    description: |
      Url to use with NuGet target. Should be a NuGet v2 or v3 endpoint.
    required: false
runs:
  using: composite
  steps:
    - name: Validate Inputs
      run: . "$env:GITHUB_ACTION_PATH\src\steps\1_validate.ps1"
      env:
        INPUT_TOKEN: ${{ inputs.token }}
        INPUT_TARGET: ${{ inputs.target }}
        INPUT_PATH: ${{ inputs.path }}
        INPUT_NUGETURL: ${{ inputs.nugetUrl }}
      shell: pwsh
    - name: Prepare to Publish
      run: . "$env:GITHUB_ACTION_PATH\src\steps\2_prepare.ps1"
      env:
        INPUT_TOKEN: ${{ inputs.token }}
        INPUT_TARGET: ${{ inputs.target }}
        INPUT_PATH: ${{ inputs.path }}
        INPUT_NUGETURL: ${{ inputs.nugetUrl }}
      shell: pwsh
    - name: Publish to GitHub Packages
      run: |
        if ($env:INPUT_TARGET -eq "packages") {
          . "$env:GITHUB_ACTION_PATH\src\steps\3_publish_to_packages.ps1"
        } else {
          Write-Host "Skipping as GitHubPackages target was not selected."
        }
      env:
        INPUT_TOKEN: ${{ inputs.token }}
        INPUT_TARGET: ${{ inputs.target }}
        INPUT_PATH: ${{ inputs.path }}
        INPUT_NUGETURL: ${{ inputs.nugetUrl }}
      shell: pwsh
    - name: Publish to NuGet Repository
      run: |
        if ($env:INPUT_TARGET -eq "nuget") {
          . "$env:GITHUB_ACTION_PATH\src\steps\4_publish_to_nuget.ps1"
        } else {
          Write-Host "Skipping as NuGet target was not selected."
        }
      env:
        INPUT_TOKEN: ${{ inputs.token }}
        INPUT_TARGET: ${{ inputs.target }}
        INPUT_PATH: ${{ inputs.path }}
        INPUT_NUGETURL: ${{ inputs.nugetUrl }}
      shell: pwsh
    - name: Publish to PowerShell Gallery
      run: |
        if ($env:INPUT_TARGET -eq "gallery") {
          . "$env:GITHUB_ACTION_PATH\src\steps\5_publish_to_gallery.ps1"
        } else {
          Write-Host "Skipping as Gallery target was not selected."
        }
      env:
        INPUT_TOKEN: ${{ inputs.token }}
        INPUT_TARGET: ${{ inputs.target }}
        INPUT_PATH: ${{ inputs.path }}
        INPUT_NUGETURL: ${{ inputs.nugetUrl }}
      shell: pwsh
    - name: Cleanup
      run: |
        if ($env:UNINSTALL_STRING) {
          . "$env:GITHUB_ACTION_PATH\src\steps\6_cleanup.ps1"
        } else {
          Write-Host "Skipping as there is nothing to clean up."
        }
      env:
        INPUT_TOKEN: ${{ inputs.token }}
        INPUT_TARGET: ${{ inputs.target }}
        INPUT_PATH: ${{ inputs.path }}
        INPUT_NUGETURL: ${{ inputs.nugetUrl }}
      shell: pwsh